@model ProfileIndexModel
@{
    ViewData["Name"] = User.Identity.Name;
    Layout = "~/Views/Shared/_LayoutWithLogoHeader.cshtml";
     
}


<div class="row">
    <div class="col-lg-12">


        <div class="card">
            <div class="card-body">
                <div class="media">

                    @if (!string.IsNullOrEmpty(Model.User.AvatarPicUrl)){
                     <span class="avatar" style="background-image: url('@Model.User.AvatarPicUrl' )">
                      </span>
                    }
                    else
                    {
                     <span class="avatar  avatar-xxl  avatar-azure m-3 mr-5">@Model.User.UserName.Substring(0, 2).ToUpper() </span>
                    }
                    <div class="media-body">
                        <div class="row">
                            <h1 class="col-12">
                                @Model.User.UserName
                                @if (Model.Relationship== Relationship.Unfollowed)
                                {
                                   <button class="btn btn-outline-primary useraction btn-sm ml-3 follow" data-id="@Model.User.UserId"><span class="fe fe-user-plus  mr-2"></span> Follow</button>
                                }
                                else if (Model.Relationship == Relationship.Following || Model.Relationship == Relationship.FollowingEachOther)
                                {
                                   <button class="btn btn-success useraction btn-sm ml-3 unfollow" data-id="@Model.User.UserId"><i class="fe fe-user-minus mr-2"></i>Unfollow</button>
                                }
                                else if (Model.Relationship == Relationship.Self)
                                {
                                    <a class="btn btn-secondary btn-sm ml-3" href="@Url.Action("Edit")">Edit Profile</a>
                                }
                            </h1>
                        </div>

                        <div class="row">
                            <div class="col-sm-6 col-lg-8 h4">
                                <a class="col-sm-2 col-lg-4" id="userPostsCount">@Model.Posts.Count()</a><span class="font-weight-light">posts</span>
                                <a class="col-sm-2 col-lg-4" id="userfollowers">@Model.Followers</a><span class="font-weight-light">followers</span>
                                <a class="col-sm-2 col-lg-4" id="userfollowees">@Model.Followees</a><span class="font-weight-light">following</span>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-lg-12">

    <div class="page-header">
        <h1 class="page-title">
            Posts
        </h1>
        <div class="page-options">
            @if (Model.Relationship == Relationship.Self) {
                @Html.Partial("_AddPost")
            }
        
        </div>
    </div>
    <div class="row row-cards">

        @foreach (var item in Model.Posts)
        {
            <div class="col-sm-6 col-lg-3">
                <div class="card">
                    <div class="hovereffect" data-src="@item.ImgUrl" data-width="@item.Width" data-height="@item.Height">
                        <img src="@item.ThumbUrl")" alt="@item.Title" class="rounded  grapephoto profile-post" >
                        <div class="overlay">
                            <h2>@item.Title</h2>
                            <a class="info" href="#"><i class="fe fe-heart mr-1"></i>@item.LikeCount</a>
                        </div>
                    </div>
                </div>
            </div>
        }
 
    </div>

    @*<div class="form-footer">
        <button class="btn btn-outline-primary btn-block"><i class="fe fe-plus mr-2"></i>Load More</button>
    </div>*@
</div>



@section Scripts{
    <script>
        require(['jquery', '../../lib/sweetalert2/dist/sweetalert2.all.min.js'], function ($, Swal) {

                    
                         function bindingFollowEvent() {
                               $('.useraction').unbind("click");
                               $('.useraction').click(function () {
                                var url = "";
                                var isFollow = $(this).hasClass("follow");
                                if (isFollow) {
                                    url = '@Url.Action("Follow","Common")';
                                } else {
                                    url = '@Url.Action("Unfollow","Common")';
                                }
                                var self = this;
                                var followUserId = $(this).data("id");
                                var currentFollwers = parseInt($("#userfollowers").html());
                                $.ajax({
                                    method: 'post',
                                    url: url,
                                    data: { id: followUserId },
                                    dataType: "json",
                                    success: function (data) {
                                
                                        console.log(data);
                                        if (data.success) {
                                            if (isFollow) {
                                                $(self).removeClass("follow").removeClass("btn-outline-primary")
                                                    .addClass("unfollow").addClass("btn-success");

                                                $(self).html('<span class="fe fe-user-minus  mr-2"></span>Unfollow');
                                                currentFollwers += 1;
                                                Swal('', "Followed sucessful", 'success')
                                            }
                                            else {
                                                $(self).removeClass("unfollow")
                                                    .removeClass("btn-success")
                                                    .addClass("btn-outline-primary")
                                                    .addClass("follow");
                                                $(self).html('<span class="fe fe-user-plus  mr-2"></span>Follow');
                                                currentFollwers -= 1;
                                                Swal('', "Unfollow sucessful", 'success');
                                            }
                                            $("#userfollowers").html(currentFollwers);
                                            bindingFollowEvent();
                                        }
                                        else {
                                            Swal('Oops...', data.message, 'error')
                                        }
                                    }, //End of AJAX Success function  

                                    failure: function (data) {
                                        console.log(data);
                                    }, //End of AJAX failure function  
                                    error: function (data) {
                                        console.log(data);
                                    } //End of AJAX error function  
                                });
                            });

                          } 
                    $(document).ready(function () {
                        $('.btn-post').click(function () {
                            console.log("adding post.");
                            var url = '@Url.Action("AsyncUpload","Common")';
                            var formData = new FormData($("#addPostForm")[0]);
                            $("#addpostcontent").addClass("active");
                            $.ajax({
                                method: 'post',
                                url: url,
                                data: formData,
                                dataType: "json",
                                processData: false,
                                contentType: false,
                                success: function (data) {
                                    $("#addpostcontent").removeClass("active");
                                    if (data.success) {
                                        location.reload();
                                    }
                                    else {
                                        Swal('Oops...', data.message, 'error')

                                    }
                                }, //End of AJAX Success function

                                failure: function (data) {
                                    console.log(data);
                                }, //End of AJAX failure function
                                error: function (data) {
                                    console.log(data);
                                } //End of AJAX error function
                            });
                        });


                        bindingFollowEvent();

                    });

        });


        require(['jquery', '../../lib/photoswipe/dist/photoswipe.js', '../../lib/photoswipe/dist/photoswipe-ui-default.js'],
            function ($, PhotoSwipe, PhotoSwipeUI_Default) {
                $(document).ready(function () {
                    $("div.hovereffect").click(function (e) {
                        var index = $(this).index();
                        console.log(index);
                        var pswpElement = document.querySelectorAll('.pswp')[0];
                        var items = [];
                        $("div.hovereffect").each(function (index, value) {
                            var imageLink = $(this).data("src");
                            
                            var w = $(this).data("width");
                            var h = $(this).data("height");

                            console.log(w);
                            console.log(h);
                            items.push({
                                src: imageLink,
                                w: w,
                                h: h
                            });
                        });
                        var options = {
                            index: index,
                            history: false,
                            focus: false,
                            showAnimationDuration: 0,
                            hideAnimationDuration: 0
                        };

                        var gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);
                        gallery.init();
                    });

                });
            });

    </script>
}